# .github/workflows/api-tests.yml
name: Pokemon API Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run weekly on Monday at 8 AM UTC
    - cron: '0 8 * * 1'
  workflow_dispatch:
    # Allow manual trigger

env:
  NODE_VERSION: '18'

jobs:
  api-tests:
    name: Run Pokemon API Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        test-type: [standard, data-driven]
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📦 Install Dependencies
      run: |
        npm ci
        npm install newman newman-reporter-htmlextra --save-dev
        
    - name: 🧪 Run Standard API Tests
      if: matrix.test-type == 'standard'
      run: |
        echo "🚀 Running standard Pokemon API tests..."
        npm run test:ci
        
    - name: 📊 Run Data-Driven Tests
      if: matrix.test-type == 'data-driven'
      run: |
        echo "🚀 Running data-driven Pokemon API tests..."
        newman run collections/pokemon-api-tests.postman_collection.json \
          -e collections/pokemon-environments.postman_environment.json \
          -d data/pokemon-test-data.csv \
          --reporters cli,junit \
          --reporter-junit-export reports/junit-datadriven.xml \
          --bail
          
    - name: 📄 Generate HTML Report
      if: always()
      run: |
        echo "📊 Generating comprehensive HTML report..."
        newman run collections/pokemon-api-tests.postman_collection.json \
          -e collections/pokemon-environments.postman_environment.json \
          --reporters htmlextra \
          --reporter-htmlextra-export reports/pokemon-api-report.html \
          --reporter-htmlextra-title "Pokemon API Test Results" \
          --reporter-htmlextra-titleSize 4 \
          --reporter-htmlextra-logs
        
    - name: 📊 Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.test-type }}
        path: |
          reports/*.xml
          reports/*.html
        retention-days: 30
        
    - name: 🔍 Test Results Summary
      if: always()
      run: |
        echo "## 🧪 Pokemon API Test Results" >> $GITHUB_STEP_SUMMARY
        echo "| Test Type | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|-----------|--------|" >> $GITHUB_STEP_SUMMARY
        if [ -f "reports/junit.xml" ] || [ -f "reports/junit-datadriven.xml" ]; then
          echo "| ${{ matrix.test-type }} | ✅ Completed |" >> $GITHUB_STEP_SUMMARY
        else
          echo "| ${{ matrix.test-type }} | ❌ Failed |" >> $GITHUB_STEP_SUMMARY
        fi
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "📊 Detailed reports are available in the artifacts section." >> $GITHUB_STEP_SUMMARY

  health-check:
    name: API Health Check
    runs-on: ubuntu-latest
    steps:
    - name: 🏥 Check PokeAPI Health
      run: |
        echo "🔍 Checking PokeAPI availability..."
        response=$(curl -s -o /dev/null -w "%{http_code}" https://pokeapi.co/api/v2/pokemon/1)
        if [ $response -eq 200 ]; then
          echo "✅ PokeAPI is healthy (Status: $response)"
        else
          echo "❌ PokeAPI health check failed (Status: $response)"
          exit 1
        fi
        
  notify:
    name: Notify Results
    runs-on: ubuntu-latest
    needs: [api-tests, health-check]
    if: always()
    steps:
    - name: 📊 Summary
      run: |
        echo "## 🚀 Pokemon API Test Suite Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Test Execution Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Repository**: ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Run ID**: ${{ github.run_id }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        if [ "${{ needs.api-tests.result }}" == "success" ]; then
          echo "✅ **API Tests**: Passed" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **API Tests**: Failed" >> $GITHUB_STEP_SUMMARY
        fi
        if [ "${{ needs.health-check.result }}" == "success" ]; then
          echo "✅ **Health Check**: API is responsive" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **Health Check**: API is not responsive" >> $GITHUB_STEP_SUMMARY
        fi